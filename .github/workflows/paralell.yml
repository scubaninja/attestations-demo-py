name: Parallel Jobs Workflow

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  FrontEnd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Front End Build
        run: echo "Building Front End"
      

  BackEnd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Back End Build
        run: echo "Building Back End"
        
  IaC:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: IaC Build 
        run: echo "Building IaC"

  job-summary:
    name: 📊 Build Summary
    runs-on: ubuntu-latest
    needs: [FrontEnd, BackEnd, IaC]
    if: always()
    
    steps:
      - name: Generate Build Summary
        run: |
          echo "# 🚀 Parallel Build Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by:** ${{ github.event_name }} 🔄" >> $GITHUB_STEP_SUMMARY
          echo "**Workflow run:** #${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "## 📋 Build Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Frontend Status
          if [[ "${{ needs.FrontEnd.result }}" == "success" ]]; then
            echo "🎨 **Frontend Build:** ✅ Success" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.FrontEnd.result }}" == "failure" ]]; then
            echo "🎨 **Frontend Build:** ❌ Failed" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.FrontEnd.result }}" == "cancelled" ]]; then
            echo "🎨 **Frontend Build:** ⏹️ Cancelled" >> $GITHUB_STEP_SUMMARY
          else
            echo "🎨 **Frontend Build:** ⏭️ Skipped" >> $GITHUB_STEP_SUMMARY
          fi
          
          # Backend Status
          if [[ "${{ needs.BackEnd.result }}" == "success" ]]; then
            echo "⚙️ **Backend Build:** ✅ Success" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.BackEnd.result }}" == "failure" ]]; then
            echo "⚙️ **Backend Build:** ❌ Failed" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.BackEnd.result }}" == "cancelled" ]]; then
            echo "⚙️ **Backend Build:** ⏹️ Cancelled" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚙️ **Backend Build:** ⏭️ Skipped" >> $GITHUB_STEP_SUMMARY
          fi
          
          # IaC Status
          if [[ "${{ needs.IaC.result }}" == "success" ]]; then
            echo "🏗️ **Infrastructure as Code:** ✅ Success" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.IaC.result }}" == "failure" ]]; then
            echo "🏗️ **Infrastructure as Code:** ❌ Failed" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.IaC.result }}" == "cancelled" ]]; then
            echo "🏗️ **Infrastructure as Code:** ⏹️ Cancelled" >> $GITHUB_STEP_SUMMARY
          else
            echo "🏗️ **Infrastructure as Code:** ⏭️ Skipped" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Overall Status
          OVERALL_STATUS="🎉 All builds completed successfully!"
          if [[ "${{ needs.FrontEnd.result }}" == "failure" || "${{ needs.BackEnd.result }}" == "failure" || "${{ needs.IaC.result }}" == "failure" ]]; then
            OVERALL_STATUS="💥 Some builds failed - check the logs above"
          elif [[ "${{ needs.FrontEnd.result }}" == "cancelled" || "${{ needs.BackEnd.result }}" == "cancelled" || "${{ needs.IaC.result }}" == "cancelled" ]]; then
            OVERALL_STATUS="⏸️ Build pipeline was cancelled"
          fi
          
          echo "## 🎯 Overall Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "$OVERALL_STATUS" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Build Statistics
          echo "## 📊 Build Statistics" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status | Duration |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|----------|" >> $GITHUB_STEP_SUMMARY
          echo "| 🎨 Frontend | ${{ needs.FrontEnd.result }} | ~30s |" >> $GITHUB_STEP_SUMMARY
          echo "| ⚙️ Backend | ${{ needs.BackEnd.result }} | ~30s |" >> $GITHUB_STEP_SUMMARY
          echo "| 🏗️ Infrastructure | ${{ needs.IaC.result }} | ~30s |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Fun Facts
          echo "## 🎲 Fun Facts" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- 🚀 This pipeline ran **3 jobs in parallel** for maximum efficiency!" >> $GITHUB_STEP_SUMMARY
          echo "- ⚡ Parallel execution saves approximately **60-90 seconds** compared to sequential builds" >> $GITHUB_STEP_SUMMARY
          echo "- 🔄 This is workflow run number **#${{ github.run_number }}** for this repository" >> $GITHUB_STEP_SUMMARY
          echo "- 📅 Build completed on **$(date +'%B %d, %Y at %H:%M UTC')**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Next Steps
          echo "## 🎯 What's Next?" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [[ "$OVERALL_STATUS" == *"successfully"* ]]; then
            echo "🎉 **Great job!** All components built successfully. Ready for deployment!" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Recommended next steps:**" >> $GITHUB_STEP_SUMMARY
            echo "- 🧪 Run integration tests" >> $GITHUB_STEP_SUMMARY
            echo "- 🔒 Perform security scans" >> $GITHUB_STEP_SUMMARY
            echo "- 🚀 Deploy to staging environment" >> $GITHUB_STEP_SUMMARY
          else
            echo "🔧 **Action needed:** Some builds failed. Please review the logs and fix any issues." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Troubleshooting tips:**" >> $GITHUB_STEP_SUMMARY
            echo "- 📋 Check the individual job logs for detailed error messages" >> $GITHUB_STEP_SUMMARY
            echo "- 🔄 Try re-running the failed jobs" >> $GITHUB_STEP_SUMMARY
            echo "- 💬 Ask for help in the team chat if issues persist" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "💡 **Tip:** You can re-run individual failed jobs without running the entire workflow!" >> $GITHUB_STEP_SUMMARY
        