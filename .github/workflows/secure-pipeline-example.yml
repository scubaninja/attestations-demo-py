name: Secure CI/CD Pipeline Example

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Stage 1: Build, Sign, and Attest
  secure-build:
    name: Secure Build Pipeline
    uses: ./.github/workflows/reusable-secure-build.yml
    with:
      artifact-type: 'container'
      artifact-name: ${{ github.repository }}
      build-context: '.'
      dockerfile-path: 'Dockerfile'
      registry: 'ghcr.io'
      registry-username: ${{ github.actor }}
      generate-slsa-provenance: true
      generate-sbom: true
      sign-artifacts: true
      compliance-report: true
    secrets:
      registry-password: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
      security-events: write

  # Stage 2: Verify before deployment
  verify-for-deployment:
    name: Verify Attestations
    needs: secure-build
    if: github.ref == 'refs/heads/main' && needs.secure-build.outputs.compliance-status == 'PASS'
    uses: ./.github/workflows/reusable-verification.yml
    with:
      artifact-url: ${{ needs.secure-build.outputs.artifact-url }}
      artifact-digest: ${{ needs.secure-build.outputs.artifact-digest }}
      artifact-type: 'container'
      require-signature: true
      require-slsa-provenance: true
      require-sbom: true
      min-slsa-level: '3'
      block-on-failure: true
    permissions:
      contents: read
      attestations: read
      security-events: write

  # Stage 3: Deploy to staging (only if verification passes)
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [secure-build, verify-for-deployment]
    if: |
      github.ref == 'refs/heads/main' && 
      needs.verify-for-deployment.outputs.verification-status == 'PASS' &&
      needs.verify-for-deployment.outputs.deployment-allowed == 'true'
    environment:
      name: staging
      url: https://staging.example.com
    
    steps:
      - name: Deploy to staging
        run: |
          echo "🚀 Deploying verified artifact to staging..."
          echo "Artifact: ${{ needs.secure-build.outputs.artifact-url }}"
          echo "Digest: ${{ needs.secure-build.outputs.artifact-digest }}"
          echo "Verification Status: ${{ needs.verify-for-deployment.outputs.verification-status }}"
          
          # Your actual deployment commands here
          # docker run --rm ${{ needs.secure-build.outputs.artifact-url }}@${{ needs.secure-build.outputs.artifact-digest }}
          
          echo "✅ Staging deployment completed successfully"

  # Stage 4: Production deployment (requires manual approval)
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [secure-build, verify-for-deployment, deploy-staging]
    if: |
      github.ref == 'refs/heads/main' && 
      needs.verify-for-deployment.outputs.verification-status == 'PASS' &&
      needs.verify-for-deployment.outputs.deployment-allowed == 'true'
    environment:
      name: production
      url: https://production.example.com
    
    steps:
      - name: Re-verify before production deployment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "🔍 Re-verifying artifact before production deployment..."
          
          # Additional production-specific verification
          gh attestation verify ${{ needs.secure-build.outputs.artifact-url }}@${{ needs.secure-build.outputs.artifact-digest }} \
            --owner ${{ github.repository_owner }}
          
          echo "✅ Production pre-deployment verification passed"

      - name: Deploy to production
        run: |
          echo "🚀 Deploying to production with full attestation chain..."
          echo "Artifact: ${{ needs.secure-build.outputs.artifact-url }}"
          echo "Digest: ${{ needs.secure-build.outputs.artifact-digest }}"
          echo "Attestation Bundle: ${{ needs.secure-build.outputs.attestation-bundle }}"
          
          # Your actual production deployment commands here
          # kubectl set image deployment/app container=${{ needs.secure-build.outputs.artifact-url }}@${{ needs.secure-build.outputs.artifact-digest }}
          
          echo "✅ Production deployment completed successfully"

  # Generate deployment summary
  deployment-summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    needs: [secure-build, verify-for-deployment, deploy-staging, deploy-production]
    if: always()
    
    steps:
      - name: Generate deployment summary
        run: |
          echo "## 📊 Deployment Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY  
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### 🔧 Build Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Artifact:** \`${{ needs.secure-build.outputs.artifact-url || 'Not built' }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Digest:** \`${{ needs.secure-build.outputs.artifact-digest || 'N/A' }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Compliance:** ${{ needs.secure-build.outputs.compliance-status || 'Unknown' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Attestations:** ${{ needs.secure-build.outputs.attestation-bundle && '✅ Generated' || '❌ Missing' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### 🔒 Verification Results" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** ${{ needs.verify-for-deployment.outputs.verification-status || 'Not verified' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployment Gate:** ${{ needs.verify-for-deployment.outputs.deployment-allowed == 'true' && '✅ Approved' || '❌ Blocked' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### 🚀 Deployment Status" >> $GITHUB_STEP_SUMMARY
          echo "- **Staging:** ${{ needs.deploy-staging.result == 'success' && '✅ Deployed' || needs.deploy-staging.result == 'failure' && '❌ Failed' || needs.deploy-staging.result == 'skipped' && '⏭️ Skipped' || '⏸️ Pending' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Production:** ${{ needs.deploy-production.result == 'success' && '✅ Deployed' || needs.deploy-production.result == 'failure' && '❌ Failed' || needs.deploy-production.result == 'skipped' && '⏭️ Skipped' || '⏸️ Pending' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Add verification details if available
          if [[ "${{ needs.verify-for-deployment.result }}" == "success" ]]; then
            echo "### 📋 Security Verification Details" >> $GITHUB_STEP_SUMMARY
            echo "See the verification job summary for detailed security report." >> $GITHUB_STEP_SUMMARY
          fi